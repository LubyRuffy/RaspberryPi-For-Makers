#!/usr/bin/env python
#-*- coding: utf-8 -*-
#If this code works, it was written by Seunghyun Lee(www.bluebaynetworks.co.kr).
#If not, I don't know who wrote it

import RPi.GPIO as GPIO
import numpy as np
import lib_ledmatrix

NUMBER = [
	[0x3E, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x3E, 0x00],
	[0x0C, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x3F, 0x00],
	[0x1E, 0x33, 0x30, 0x1C, 0x06, 0x33, 0x3F, 0x00],
	[0x1E, 0x33, 0x30, 0x1C, 0x30, 0x33, 0x1E, 0x00],
	[0x38, 0x3C, 0x36, 0x33, 0x7F, 0x30, 0x78, 0x00],
	[0x3F, 0x03, 0x1F, 0x30, 0x30, 0x33, 0x1E, 0x00],
	[0x1C, 0x06, 0x03, 0x1F, 0x33, 0x33, 0x1E, 0x00],
	[0x3F, 0x33, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00],
	[0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E, 0x00],
	[0x1E, 0x33, 0x33, 0x3E, 0x30, 0x18, 0x0E, 0x00]
]

"""
이 함수에서 해당 숫자의 폰트 데이터를 읽어서 8X8 배열(pixels)에 ON, OFF 값을 만든다.
이 pixels 배열을 이용해 쉬프트 레지스터를 8번 조작하면 한번의 디스플레이가 완성
8 X 8 매트릭스 테스트에만 사용(멀티플렉싱 방식이 아님)
"""
def LED_number(num):
  led = np.zeros((8,8), dtype=int)
  for x in range(0, 8):
    bitMask = 0x01
    val = NUMBER[num][x]
    for y in range(0, 8):
      if (val & bitMask):
        led[x][y] = 1
      else:
        led[x][y] = 0
      bitMask <<= 1
  print led 
  lib_ledmatrix.LED_copy_image(led)


lib_ledmatrix.init_lib(8,8,20,21,12,16,25,24,18,23)
lib_ledmatrix.LED_Reset()
LED_number(3)

try:
  while True:
    lib_ledmatrix.LED_multiplex()
except (KeyboardInterrupt, SystemExit):
  print("Ctrl C --> Exit...")
finally:
  lib_ledmatrix.LED_Reset()
  GPIO.cleanup()
print "Good bye!"












